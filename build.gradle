/*
 * This file was generated by the Gradle 'init' task.
 */

allprojects {
    group = 'cn.iris'
    version = '1.0'
}

logger.lifecycle("TARGETING VERSION: ${version}")

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        maven {
            url = 'http://maven.aliyun.com/nexus/content/groups/public/'
        }

        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-data-jpa:${springboot_version}"
        compile "org.springframework.boot:spring-boot-starter-web:${springboot_version}"
        compile "org.springframework.boot:spring-boot-starter-security:${springboot_version}"
        compile "org.springframework.boot:spring-boot-starter-cache:${springboot_version}"
        compile "org.springframework.boot:spring-boot-starter-data-redis:${springboot_version}"
        compile "org.springframework.boot:spring-boot-starter-validation:${springboot_version}"
        compile "org.apache.commons:commons-pool2:${commons_pool2_version}"
        compile "org.apache.commons:commons-lang3:${commons_lang3_version}"
        compile "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:${log4jdbc_version}"
        compile "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4j_spring_version}"
        compile "com.alibaba:druid-spring-boot-starter:${druid_version}"
        compile "net.dreamlu:mica-ip2region:${ip2region_version}"
        compile "org.apache.poi:poi:${poi_version}"
        compile "org.apache.poi:poi-ooxml:${poi_version}"
        compile "xerces:xercesImpl:${xerces_version}"
        compile "com.alibaba:fastjson:${fastjson_version}"
        compile "org.hibernate.validator:hibernate-validator:${fastjson_version}"
        compile "javax.xml.bind:jaxb-api:2.3.0"
        compile "com.sun.xml.bind:jaxb-impl:2.3.0"
        compile "com.sun.xml.bind:jaxb-core:2.3.0"
        compile "javax.activation:activation:1.1.1"
        compile "javax.inject:javax.inject:${inject_version}"
        compile "com.github.whvcse:easy-captcha:${captcha_version}"
        compile "nl.basjes.parse.useragent:yauaa:${yauaa_version}"
        compile "mysql:mysql-connector-java:${mysql_version}"
        
        compile "org.projectlombok:lombok:${lombok_version}"
        annotationProcessor "org.projectlombok:lombok:${lombok_version}"
        compile "org.mapstruct:mapstruct:${mapstruct_version}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
        
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springboot_version}"

    }
    
    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
